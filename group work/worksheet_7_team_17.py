# -*- coding: utf-8 -*-
"""Copy of Worksheet 7 Team 17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D9WYWJI9heto9oN3XgykQx_aaISBrZaL

# Team Project
Due: Tuesday end of the day 11:59pm

Team Project - Slides and Code: https://bcourses.berkeley.edu/courses/1546666/assignments/8959973

Upload the file to Berkeley Box (https://bconnected.berkeley.edu/services/box), and share with me (kerger@berkeley.edu) + email me (kerger@berkeley.edu) the link, and also CC matthew_qi@berkeley.edu, with email subject "210: Team <teamnum> Presentation Recording".

Slides: https://docs.google.com/presentation/d/1-xIL_Sj_WPRjz4HXBVyGhfBagK121Guk9QSLGOFWb9o/edit?usp=sharing

Script: https://docs.google.com/document/d/1a2uEAekooEJgR9ZXWI845ietbqxxUTGGur2mAtzX-ZQ/edit?usp=sharing

## Description
This project has two main steps:

1. Individual Exploratory Phase - ("Worksheet 7")

    Each team member will investigate a dataset of their choice, import it as a pandas dataframe, and do the following exploratory tasks:

    Print summary statistics (such as mean, max, min, percentage of occurrence) of two important columns in the data

    Make a histogram of some important quantity in the data, a scatterplot showing the relationship between two columns where we might expect one, and a pivot table

    Investigate some summary statistic of a column under meaningful conditions on a different column (example: Heart disease prevalence in patients with higher than average cholesterol, win rate of home teams in sports, number of sales made on weekends ...) versus when the condition is not met

    The previous bullet point but with two or more conditions

    You will then discuss with your teammates, show each other your findings, and choose one dataset to use for your team project.

2. Group Phase

    You will then work together on further investigation of the selected dataset, apply relevant statistical or analytics methods to the data, and create a small interactive dashboard with dash on this dataset. You will report your findings and show your dashboard in a short presentation, which will be the main deliverable for this project. In this presentation, your team should: Briefly introduce the dataset, show any interesting findings of relationships in the data, emphasize something practical those insights might be useful for (slides for these items), and briefly demonstrate your dashboard. What exactly  you do in the project is intentionally left somewhat open and flexible, but you should of course apply the things in Python that we have learned in this class. Presentations should be about 5-7 minutes long (which I know is extremely fast), and you will submit your slides and code on bCourses as well, along with code for your analysis, figures, and dashboard. Live-Zoom teams and in-person teams will present on Tuesday, while asynchronous teams will send in a recording (suggestion: use a recorded Zoom meeting, and note that not all your teammates have to present if it is too tough to coordinate). All team members should speak in the presentation, even if briefly, if possible.

## Predict Pet Adoption Status Dataset
https://www.kaggle.com/datasets/rabieelkharoua/predict-pet-adoption-status-dataset/data

## Yuyao Xia's Individual Exploratory
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv("pet_adoption_data.csv")

# TimeInShelterDays
print("TimeInShelterDays mean:", df["TimeInShelterDays"].mean())
print("TimeInShelterDays std:", df["TimeInShelterDays"].std())
print("TimeInShelterDays min:", df["TimeInShelterDays"].min())
print("TimeInShelterDays max:", df["TimeInShelterDays"].max())
print("\nTimeInShelterDays percentage of occurrence:")
print((df["TimeInShelterDays"].value_counts(normalize=True) * 100))

# AdoptionFee
print("AdoptionFee mean:", df["AdoptionFee"].mean())
print("AdoptionFee std:", df["AdoptionFee"].std())
print("AdoptionFee min:", df["AdoptionFee"].min())
print("AdoptionFee max:", df["AdoptionFee"].max())
print("\nAdoptionFee percentage of occurrence:")
print((df["AdoptionFee"].value_counts(normalize=True) * 100))

#Histogram
plt.hist(df["WeightKg"].dropna(), bins=20, edgecolor="black")
plt.title("Pets' Weight Distribution")
plt.xlabel("Weight (kg)")
plt.ylabel("Count")
plt.tight_layout()
plt.show()

#Scatterplot
plt.figure()
plt.scatter(df["AgeMonths"], df["AdoptionFee"], alpha=0.5)
plt.title("Age vs Adoption Fee")
plt.xlabel("AgeMonths")
plt.ylabel("Adoption Fee")
plt.tight_layout()
plt.show()

#Pivot Table
print("\nPivot Table: Average adoption fee based on pet type and wether they have previous owner (0 = No, 1 = Yes)")
pivot = pd.pivot_table(df,values="AdoptionFee",index="PetType",columns="PreviousOwner",aggfunc=np.mean)
print(pivot)

# Adoption likelihhod rate: Vaccinated vs Not Vaccinated
adopted = (df["AdoptionLikelihood"] == 1)
vaccinated = (df["Vaccinated"] == 1)
not_vaccinated = (df["Vaccinated"] == 0)
adoption_rate_vaccinated = adopted[vaccinated].mean() * 100
adoption_rate_not_vaccinated = adopted[not_vaccinated].mean() * 100
print("Adoption likelihood rate for vaccinated pet:", adoption_rate_vaccinated, "%")
print("Adoption likelihood rate for non-vaccinated pet:", adoption_rate_not_vaccinated, "%")

# Adoption likelihhod rate: Vaccinated vs Not Vaccinated & age
age_mean = df["AgeMonths"].mean()
younger = (df["AgeMonths"] < age_mean)
older_or_equal = (df["AgeMonths"] >= age_mean)

vacc_young = adopted[vaccinated & younger].mean() * 100
vacc_old = adopted[vaccinated & older_or_equal].mean() * 100
notvacc_young = adopted[not_vaccinated & younger].mean() * 100
notvacc_old = adopted[not_vaccinated & older_or_equal].mean() * 100

print("Vaccinated & Younger than average age:", vacc_young, "%")
print("Vaccinated & Older or equal to average age:", vacc_old, "%")
print("Not Vaccinated & Younger than average age:", notvacc_young, "%")
print("Not Vaccinated & Older or equal to average age:", notvacc_old, "%")

"""## Interesting Findings from the Pet Adoption Dataset

### Python Code for Analysis
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df = pd.read_csv("pet_adoption_data.csv")

# Calculate adoption rates (AdoptionLikelihood is 1 for likely adopted, 0 for not)
adoption_rate_by_type = df.groupby('PetType')['AdoptionLikelihood'].mean()
print("Adoption rate by Pet Type:")
for pet_type, rate in adoption_rate_by_type.items():
    print(f"  {pet_type}: {rate*100:.2f}%")

# Bar chart: Adoption Rate by Pet Type
plt.figure(figsize=(6,4))
sns.barplot(x=adoption_rate_by_type.index, y=adoption_rate_by_type.values, palette="viridis")
plt.title("Adoption Rate by Pet Type")
plt.xlabel("Pet Type")
plt.ylabel("Adoption Rate (fraction adopted)")
plt.ylim(0, 1)
# Annotate each bar with percentage
for i, v in enumerate(adoption_rate_by_type.values):
    plt.text(i, v + 0.02, f"{v*100:.1f}%", ha='center')
plt.tight_layout()
plt.show()

# Calculate adoption rate by Color
adoption_rate_by_color = df.groupby('Color')['AdoptionLikelihood'].mean()
print("\nAdoption rate by Pet Color:")
for color, rate in adoption_rate_by_color.items():
    print(f"  {color}: {rate*100:.2f}%")

# Bar chart: Adoption Rate by Pet Color
plt.figure(figsize=(6,4))
sns.barplot(x=adoption_rate_by_color.index, y=adoption_rate_by_color.values, palette="magma")
plt.title("Adoption Rate by Pet Color")
plt.xlabel("Color")
plt.ylabel("Adoption Rate (fraction adopted)")
plt.ylim(0, 1)
for i, v in enumerate(adoption_rate_by_color.values):
    plt.text(i, v + 0.02, f"{v*100:.1f}%", ha='center')
plt.tight_layout()
plt.show()

# Calculate adoption rate by Breed
adoption_rate_by_breed = df.groupby('Breed')['AdoptionLikelihood'].mean()
print("\nAdoption rate by Breed:")
for breed, rate in adoption_rate_by_breed.items():
    print(f"  {breed}: {rate*100:.2f}%")

# Bar chart: Adoption Rate by Breed (horizontal)
plt.figure(figsize=(6,4))
# Sort by adoption rate for better visual ordering
sorted_rates = adoption_rate_by_breed.sort_values(ascending=True)
sns.barplot(y=sorted_rates.index, x=sorted_rates.values, palette="coolwarm")
plt.title("Adoption Rate by Breed")
plt.xlabel("Adoption Rate (fraction adopted)")
plt.ylabel("Breed")
# Annotate each bar with percentage
for i, v in enumerate(sorted_rates.values):
    plt.text(v + 0.01, i, f"{v*100:.1f}%", va='center')
plt.xlim(0, 1)
plt.tight_layout()
plt.show()

# Analyze factors influencing adoption likelihood

# Vaccination effect
vaccinated = df['Vaccinated'] == 1
not_vaccinated = df['Vaccinated'] == 0
adopted = df['AdoptionLikelihood'] == 1
vaccinated_adoption_rate = adopted[vaccinated].mean() * 100
not_vaccinated_adoption_rate = adopted[not_vaccinated].mean() * 100
print(f"\nAdoption rate for vaccinated pets: {vaccinated_adoption_rate:.2f}%")
print(f"Adoption rate for non-vaccinated pets: {not_vaccinated_adoption_rate:.2f}%")

# Health condition effect
healthy = df['HealthCondition'] == 0    # assuming 0 means healthy
unhealthy = df['HealthCondition'] == 1
healthy_adoption_rate = adopted[healthy].mean() * 100
unhealthy_adoption_rate = adopted[unhealthy].mean() * 100
print(f"\nAdoption rate for healthy pets: {healthy_adoption_rate:.2f}%")
print(f"Adoption rate for pets with health issues: {unhealthy_adoption_rate:.2f}%")

# Age effect (younger vs older than average age)
average_age = df['AgeMonths'].mean()
younger = df['AgeMonths'] < average_age
older = df['AgeMonths'] >= average_age
younger_adoption_rate = adopted[younger].mean() * 100
older_adoption_rate = adopted[older].mean() * 100
print(f"\nAverage pet age (months): {average_age:.2f}")
print(f"Adoption rate for younger pets (< average age): {younger_adoption_rate:.2f}%")
print(f"Adoption rate for older pets (>= average age): {older_adoption_rate:.2f}%")

# Size effect
adoption_rate_by_size = df.groupby('Size')['AdoptionLikelihood'].mean()
print("\nAdoption rate by Size:")
for size, rate in adoption_rate_by_size.items():
    print(f"  {size}: {rate*100:.2f}%")
# We can also check adoption rates by Size within each PetType
print("\nAdoption rate by Size within each PetType:")
size_by_type = pd.pivot_table(df, values='AdoptionLikelihood', index='PetType', columns='Size', aggfunc=np.mean)
print(size_by_type * 100)  # convert to percentages

# Previous owner effect
prev_owner = df['PreviousOwner'] == 1
no_prev_owner = df['PreviousOwner'] == 0
prev_owner_adoption_rate = adopted[prev_owner].mean() * 100
no_prev_owner_adoption_rate = adopted[no_prev_owner].mean() * 100
print(f"\nAdoption rate for pets with a previous owner: {prev_owner_adoption_rate:.2f}%")
print(f"Adoption rate for pets without a previous owner: {no_prev_owner_adoption_rate:.2f}%")

# Adoption fee effect (correlation and average fee by outcome)
fee_correlation = df['AdoptionFee'].corr(df['AdoptionLikelihood'])
avg_fee_adopted = df[df['AdoptionLikelihood']==1]['AdoptionFee'].mean()
avg_fee_not_adopted = df[df['AdoptionLikelihood']==0]['AdoptionFee'].mean()
print(f"\nCorrelation between AdoptionFee and AdoptionLikelihood: {fee_correlation:.4f}")
print(f"Average AdoptionFee (adopted pets): ${avg_fee_adopted:.2f}")
print(f"Average AdoptionFee (not adopted pets): ${avg_fee_not_adopted:.2f}")

"""### Findings

#### Adoption Trends by Pet Type

Figure: Adoption Rate by Pet Type. Dogs had the highest adoption rate among all pet types, with about 46% of dogs being adopted (AdoptionLikelihood = 1). In contrast, rabbits had the lowest adoption rate at roughly 25%, while cats and birds were in between (around 28–30%). This suggests that dogs are the most popular pets in terms of finding new homes, whereas rabbits tend to be less frequently adopted. Shelters might focus extra effort on encouraging rabbit adoptions since they lag behind other animals in popularity.

#### Adoption Trends by Pet Color

Figure: Adoption Rate by Pet Color. Pet color showed some effect on adoption likelihood, though differences were moderate. Orange-colored pets had the highest adoption rate (~34.7%), closely followed by gray, black, and brown pets (around 32–34% adoption). Notably, white pets had the lowest adoption rate (~28.6%) in the dataset. This indicates a slight preference (or bias) in adoption outcomes based on color – for example, darker-colored or orange pets were adopted a bit more often than white pets. While the color effect is not huge, shelters could take note and ensure that lighter-colored animals (like white pets) get equally highlighted to potential adopters.

#### Adoption Trends by Breed

Figure: Adoption Rate by Breed. Even within the same pet type, adoption likelihood can vary widely by breed. Labrador dogs stood out with an adoption rate of about 72%, much higher than other breeds. In comparison, Golden Retrievers and Poodles had adoption rates around 29–34%, indicating that Labradors were far more likely to find a home in this data. Among cat breeds, Siamese cats had a slightly higher adoption rate (~30.8%) than Persians (~26.6%), suggesting Siamese were a bit more popular. The Parakeet (the only bird breed in the data) had an adoption rate around 30%, and rabbits (only one breed category) were about 25%. These patterns show that certain breeds (like Labradors) are particularly appealing to adopters, which shelters might leverage by promoting those breeds or understanding what makes them more attractive.

#### Factors Influencing Adoption Likelihood

Beyond pet type, color, or breed, several key factors were associated with higher adoption likelihood. Understanding these can help improve overall pet adoption rates:

Vaccination Status: Pets that were vaccinated had a much higher adoption rate than those not vaccinated. In our data, about 42% of vaccinated pets got adopted versus only 11% of non-vaccinated pets. This huge gap implies that making sure animals are up-to-date on vaccinations can significantly boost their chances of adoption (possibly because adopters perceive them as healthier and ready to take home).

Health Condition: Similarly, healthy pets were adopted at a far greater rate than pets with health issues. Approximately 38.5% of pets with no health problems were adopted, compared to only 9.6% of those with a health condition. This four-fold difference highlights the importance of good health – treating any minor illnesses or injuries and promoting the pet as healthy can improve its adoption prospects.

Age: Younger pets tended to be adopted more often than older pets. Pets younger than the average age in the dataset (~7.7 years) had about a 40% adoption rate, whereas older pets had around 26%. This suggests that puppies, kittens, and younger animals draw more interest from adopters. To help older pets, shelters might implement special programs or marketing (since older animals were less likely to be adopted, they may need extra promotion).

Size: An interesting and unexpected finding was that medium-sized pets had the highest adoption success, with an adoption likelihood of roughly 53–74% (varying by pet type) in the data. In contrast, small or large pets had much lower adoption rates (mostly in the 9–36% range). For example, medium-sized dogs were adopted at about 74%, compared to ~28% for large dogs and ~36% for small dogs. This pattern held for cats, birds, and rabbits as well. It may indicate that adopters prefer pets of a moderate size – perhaps seeing them as easier to manage than very large pets but more substantial than very small ones. Shelters might use this insight by highlighting the benefits of both small and large pets to potential adopters, to help those groups get more attention.

Previous Ownership & Adoption Fee: Whether a pet had a prior owner did not drastically change its adoption rate in this dataset. Pets that were owner-surrendered had ~31% adoption vs ~33% for those without a previous owner, a small difference. Adoption fees also showed minimal correlation with adoption outcomes – the average fee was similar for adopted vs not adopted pets (around $248 vs $250). This implies that within reasonable bounds, the adoption fee and a pet’s backstory (stray vs surrendered) were not decisive factors for adoption in this data. Potential adopters seemed to focus more on the pet’s characteristics (species, breed, health, etc.) than on its fee or history.
"""